version: '3.8'

services:
  api:
    build:
      context: ../backend
      target: development
    develop:
      watch:
        - action: rebuild
          path: .
    ports:
      - "80:80"
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    env_file: "Env/Api.env"

  idp:
    image: quay.io/keycloak/keycloak:26.0.6
    command: start-dev
    env_file: "Env/KeyCloak.env"
    ports:
      - "8080:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./Providers:/opt/keycloak/providers

  database:
    image: mysql:latest
    restart: always
    volumes:
      - database-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=Alexandria
      - MYSQL_USER=standard_user
    env_file: "Env/MySql.env"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  rabbitmq:
    image: rabbitmq:4.0.4-management-alpine
    restart: always
    hostname: dev-host
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "5672:5672" # RabbitMQ message broker port
      - "15672:15672" # RabbitMQ management console
    env_file: "Env/RabbitMq.env"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  database-data:
  keycloak-data:
  rabbitmq-data:
